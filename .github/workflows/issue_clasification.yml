name: Issue Classification

on:
  issues:
    types: [opened,edited]

jobs:
  classify-issue:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        pip install ollama langchain_community requests
        
    - name: Pull Ollama Docker image
      run: docker pull ollama/ollama
        
    - name: Run Ollama container
      run: |
        docker run -d -v ollama:/root/.ollama -p 11434:11434 --name ollama ollama/ollama
    
    - name: Download Llama 3 8B model
      run: |
        docker exec ollama ollama pull llama3:8b
        
    - name: Run Llama 3 8B model
      run: |
        docker exec ollama ollama run llama3:8b
        
    - name: Run issue classification
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        ISSUE_TITLE: ${{ github.event.issue.title }}
        ISSUE_BODY: ${{ github.event.issue.body }}
      run: |
        python << EOF
        import os
        from langchain_community.llms import Ollama
        import requests
        
        issue_title = os.environ["ISSUE_TITLE"]
        issue_body = os.environ["ISSUE_BODY"]
        
        llm = Ollama(model="llama3:8b")
        
        prompt = f"""
        Classify the following GitHub issue and suggest appropriate labels:
        
        Title: {issue_title}
        
        Description: 
        {issue_body}
        
        Labels:
        """
        
        labels = llm.invoke(prompt).strip()
        print(f"Suggested labels: {labels}")
        
        # Add labels to issue
        issue_number = ${{ github.event.issue.number }}
        labels_array = labels.split(", ")
        
        url = f"https://api.github.com/repos/${{ github.repository }}/issues/{issue_number}/labels"
        headers = {
          "Authorization": "Bearer ${{ secrets.GITHUB_TOKEN }}"
        }
        data = {"labels": labels_array} 
        response = requests.post(url, headers=headers, json=data)
        
        print(response.text)
        EOF
