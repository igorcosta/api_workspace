name: CI/CD Pipeline

on:
  push:
    branches:
      - dev
    tags:
      - '**'
  pull_request:
    branches:
      - main


jobs:
  super-lint:
    name: Super Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Lint Code Base
        uses: github/super-linter@v3
        with:
          linter_rules_path: .github/linters
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  development:
    name: Development Stage
    needs: super-lint
    if: github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run tests
        run: |
          pytest

  staging:
    name: Staging Stage
    needs: development
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build and publish Python package
        run: |
          python setup.py sdist bdist_wheel
          twine upload dist/*
      - name: Create Docker image for staging
        run: |
          docker build -t myapp:${{ github.ref_name }}-staging .

  production:
    name: Production Stage
    needs: staging
    if: github.event_name == 'pull_request' && github.base_ref == 'main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Create and publish Docker image for production
        run: |
          docker build -t myapp:${{ github.ref_name }}-production .
      - name: Generate new tag and release
        id: tag_version
        uses: ncipollo/release-action
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          body: "Release of version ${{ github.ref_name }}"
          token: ${{ secrets.GITHUB_TOKEN }}

  auto-tag-and-release:
    name: Auto Tag and Release
    needs: production
    runs-on: ubuntu-latest
    steps:
      - name: Generate tag and release
        id: auto_tag_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: |
            ## Build Report
            - Release notes for ${{ github.ref_name }}
